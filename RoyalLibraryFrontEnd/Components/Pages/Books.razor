@page "/books"
@rendermode InteractiveServer
@attribute [StreamRendering]
@inject HttpClient HttpClient
@inject ApiService ApiService
@using System.Text.Json
@using RoyalLibraryFrontEnd.Models
@using System.Net.Http;
@using RoyalLibraryFrontEnd.Shared

<div class="row">
    <div class="col-lg-4 offset-lg-4 pt-4 pb-4 border">
        <div class="mb-3 text-center">
        <h3>Books</h3>
        </div>
        <div class="mb-3">
            <label>Search Value</label>
            <input @bind="searchString" class="form-control" />
        </div>
        <div class="mb-3">
            <label>Search by</label>
            <select @bind="searchType">
                @foreach (var item in dropdownItems)
                {
                    <option value="@item">@item</option>
                }
            </select>
        </div>
        <div class="mb-3 d-grid gap-2">
            <button @onclick="LoadBooks" type="submit" class="btn btn-primary">Search</button>
        </div>
    </div>
</div>
@if (books == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>title</th>
                <th>Author</th>
                <th>total copies</th>
                <th>copies in use</th>
                <th>type</th>
                <th>isbn</th>
                <th>category</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var book in books)
            {
                <tr>
                    <td>@book.title</td>
                    <td>@book.first_Name <span></span> @book.last_Name</td>
                    <td>@book.total_Copies</td>
                    <td>@book.copies_In_Use</td>
                    <td>@book.type</td>
                    <td>@book.isbn</td>
                    <td>@book.category</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private string searchString = "";
    private string searchType = "Any";
    private string[] dropdownItems = { "Any", "Author", "ISBN" };
    private List<Book> books = new List<Book>();
    private readonly HttpClient _client;

    public async void LoadBooks()
    {
        string Uri = "http://host.docker.internal:443/royal-library/" + searchType + "/" + searchString;
        var response = await HttpClient.GetAsync(Uri);
        if (response.IsSuccessStatusCode)
        {
            var responseBody = await response.Content.ReadAsStringAsync();
            CommandResult commandRes = JsonSerializer.Deserialize<CommandResult>(responseBody);
            if (commandRes != null && commandRes.data != null && commandRes.data.bookList != null)
            {

                books = commandRes.data.bookList;
                StateHasChanged();
            }
            else
            {
                Console.WriteLine("No book data found in the response.");
            }
        }
        else
        {
            Console.WriteLine($"Error: {response.StatusCode} - {response.ReasonPhrase}");
        }
    }
}

